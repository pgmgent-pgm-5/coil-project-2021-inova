# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Profile {
  id: String!
  firstName: String!
  lastName: String!
  image: String
}

type Event {
  id: String!
  name: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  userHasEvent: [UserHasEvent!]!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Expence {
  id: String!
  sum: Int!
  name: String!
  calculation: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  userEvent: UserHasEvent!
}

type UserHasEvent {
  id: Float!
  createdAt: DateTime!
  displayOrder: Float!
  updatedAt: DateTime!
  event: Event!
  user: User!
  expence: Expence!
}

type User {
  id: String!
  email: String!
  password: String!
  profile: Profile
  userHasEvent: [UserHasEvent!]!
}

type SignInResponse {
  id: String!
  access_token: String!
}

type OweInfo {
  userName: String!
  sum: Float!
}

type Query {
  getAllUsers: [User!]!
  getUserById(id: String!): User!
  getAllProfiles: [Profile!]!
  getProfileByIdprofile(id: String!): Profile!
  userHasEvent: [UserHasEvent!]!
  userHasEventFindEvents(id: String!): UserHasEvent!
  userHasEventFindEventsByuserIdEventId(eventId: String!, userId: String!): UserHasEvent!
  getAllEvents: [Event!]!
  event(id: Int!): Event!
  getAllExpences(eventId: String!): [Expence!]!
  expence(id: String!): Expence!
}

type Mutation {
  createUser(createProfileInput: CreateProfileInput!, createUserInput: CreateUserInput!): User!
  updateUser(updateUserInput: UpdateUserInput!): User!
  removeUser(id: String!): String!
  removeProfile(id: String!): Profile!
  removeUserHasEvent(id: Int!): UserHasEvent!
  login(password: String!, email: String!): SignInResponse!
  createEvent(createEventInput: CreateEventInput!): Event!
  updateEvent(updateEventInput: UpdateEventInput!): Event!
  removeEvent(id: Int!): Event!
  createExpence(createExpenceInput: CreateExpenceInput!): Expence!
  updateExpence(updateExpenceInput: UpdateExpenceInput!): Expence!
  removeExpence(id: String!): Expence!
}

input CreateProfileInput {
  firstName: String!
  lastName: String!
  image: String
}

input CreateUserInput {
  email: String!
  password: String!
}

input UpdateUserInput {
  id: String!
  email: String
  password: String
  profile: UpdateProfileInput
}

input UpdateProfileInput {
  id: String!
  firstName: String
  lastName: String
  image: String
}

input CreateEventInput {
  name: String!
  createdAt: DateTime
  createUserHasEventInput: [CreateUserHasEventInput!]!
}

input CreateUserHasEventInput {
  userId: String!
}

input UpdateEventInput {
  id: String!
  name: String!
  updatedAt: DateTime
}

input CreateExpenceInput {
  sum: Int!
  name: String!
  createdAt: DateTime
  createUserHasEventIdInput: CreateUserHasEventIdInput!
}

input CreateUserHasEventIdInput {
  userId: String!
  eventId: String!
}

input UpdateExpenceInput {
  id: String!
  sum: Int!
  name: String!
  updatedAt: DateTime
}
